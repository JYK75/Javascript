function solution(maps) {
    var answer = 0;
    
    let n = maps.length;
    let m = maps[0].length;
    let dx = [0,0,1,-1];
    let dy = [1, -1, 0, 0];
    
    
    let dist = [];
    for(let i = 0; i < n; i++) {
        let temp = Array(m).fill(0);
        dist.push(temp);
    }
    
    dist[0][0] += 1;
    const queue = [];
    queue.push([0,0]);

    while(queue.length) {
        const cur = queue.shift();
        for(let dir = 0; dir < 4; dir++) {
            let nx = cur[0] + dx[dir];
            let ny = cur[1] + dy[dir];
            if(nx < 0 || nx >= n || ny < 0 || ny >= m) continue;
            if(maps[nx][ny] == 0 || dist[nx][ny] != 0) continue;
            dist[nx][ny] = dist[cur[0]][cur[1]] + 1;
            queue.push([nx,ny]);
        }
    }
    
    return dist[n-1][m-1] == 0 ? -1 : dist[n-1][m-1];
}
